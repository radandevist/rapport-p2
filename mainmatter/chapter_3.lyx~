#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
%           Liste des packages         %

% Faux texte, juste pour la démo
\usepackage{blindtext}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Réglage des fontes et typo    
\usepackage[utf8]{inputenc}		% LaTeX, comprend les accents !
\usepackage[T1]{fontenc}
\usepackage{float}
\usepackage{graphicx}

%\usepackage[square,sort&compress,sectionbib]{natbib}		% Doit être chargé avant babel
\usepackage[numbers]{natbib}
\usepackage{chapterbib}
	%\renewcommand{\bibsection}{\section{Références}}		% Met les références biblio dans un \section (au lieu de \section*)
		
\usepackage[frenchb]{babel}
\usepackage{lmodern}
\usepackage{ae,aecompl}						% Utilisation des fontes vectorielles modernes
\usepackage[upright]{fourier}



% Apparence globale      
\usepackage[top=2cm, bottom=2cm, left=2.5cm, right=2cm, headheight=15pt]{geometry} 
\usepackage{fancyhdr}			% Entête et pieds de page
	\pagestyle{fancy}			% Indique que le style de la page sera justement fancy
	\lfoot[\thepage]{} %gauche du pied de page
	\cfoot{} %milieu du pied de page
	\rfoot[]{\thepage} %droite du pied de page
	\fancyhead[RO, LE] {}	
\usepackage{enumerate}
\usepackage{enumitem}
\usepackage[section]{placeins}	% Place un FloatBarrier à chaque nouvelle section
\makeatletter% même chose pour les \subsection que le package ne gère pas
\renewcommand\subsection{\FloatBarrier\@startsection{subsection}{2}{\z@}
{-3.25ex\@plus -1ex \@minus -.2ex}
{1.5ex \@plus .2ex}{\normalfont\large\bfseries}}
\makeatother
\usepackage{epigraph}
\usepackage[font={small}]{caption}
\usepackage[francais]{minitoc}		% Mini table des matières, en français
	\setcounter{minitocdepth}{2}	% Mini-toc détaillées (sections/sous-sections)
\usepackage{pdflscape}				% Permet d'utiliser des pages au format paysage

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Maths                         
\usepackage{amsmath}			% Permet de taper des formules mathématiques
\usepackage{amssymb}			% Permet d'utiliser des symboles mathématiques
\usepackage{amsfonts}			% Permet d'utiliser des polices mathématiques
\usepackage{nicefrac}
\usepackage{upgreek}			% For roman (i.e. upright) lowercase Greek characters

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Profondeur titre

\renewcommand\theparagraph{\alph{paragraph})}
\setcounter{secnumdepth}{4}
\setcounter{tocdepth}{4}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Tableaux
\usepackage{multirow}
\usepackage{booktabs}
\usepackage{colortbl}
\usepackage{tabularx}
\usepackage{multirow}
\usepackage{threeparttable}
\usepackage{etoolbox}
	\appto\TPTnoteSettings{\footnotesize}
\addto\captionsfrench{\def\tablename{{\textsc{Tableau}}}}	% Renome 'table' en 'tableau'

            
            

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Graphiques                    
\usepackage{graphicx}			% Permet l'inclusion d'images
\usepackage{subcaption}
\usepackage{pdfpages}
\usepackage{rotating}
\usepackage{pgfplots}
	\usepgfplotslibrary{groupplots}
\usepackage{tikz}
	\usetikzlibrary{backgrounds,automata}
	\pgfplotsset{width=7cm,compat=1.3}
	\tikzset{every picture/.style={execute at begin picture={
   		\shorthandoff{:;!?};}
	}}
	\pgfplotsset{every linear axis/.append style={
		/pgf/number format/.cd,
		use comma,
		1000 sep={\,},
	}}
\usepackage{eso-pic}
\usepackage{import}
\usepackage{cclicenses}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Biblio                        
\makeatletter
\patchcmd{\BR@backref}{\newblock}{\newblock(page~}{}{}	% Pour les back-references, affiche 'page' au lieu de 'p.'
\patchcmd{\BR@backref}{\par}{)\par}{}{}
\makeatother
	
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Navigation dans le document   
\usepackage[pdftex,pdfborder={0 0 0},
			colorlinks=true,
			linkcolor=black,
			citecolor=black,
			pagebackref=false,
			]{hyperref} %Créera automatiquement les liens internes au PDF


% Mise en forme du texte        
\usepackage{xspace}
\usepackage[load-configurations = abbreviations]{siunitx}
	\DeclareSIUnit{\MPa}{\mega\pascal}
	\DeclareSIUnit{\micron}{\micro\meter}
	\DeclareSIUnit{\tr}{tr}
	\DeclareSIPostPower\totheM{m}
	\sisetup{
	locale = FR,
	  inter-unit-separator=$\cdot$,
	  range-phrase=~\`{a}~,     	% Utilise le tiret court pour dire "de... à"
	  range-units=single,  			% Cache l'unité sur la première borne
	  }
\usepackage{chemist}
\usepackage[version=3]{mhchem}
\usepackage{textcomp}
\usepackage{numprint}
\usepackage{array}
% \usepackage[acronym,xindy,toc]{glossaries}
% 	\newglossary[nlg]{notation}{not}{ntn}{Notation} 	% Création d'un type de glossaire 'notation'
% 	\makeglossaries
% 	\loadglsentries{Glossaire}	% Utilisation d'un fichier externe pour la définition des entrées (Glossaire.tex)
% \usepackage{hyphenat}


% Compilation

\usepackage{silence}
%
%% Virer les erreur dues à minitoc
\WarningFilter{minitoc(hints)}{W0023}
\WarningFilter{minitoc(hints)}{W0024}
\WarningFilter{minitoc(hints)}{W0028}
\WarningFilter{minitoc(hints)}{W0030}

 

%           Page de garde              %
\makeatletter
\def\@ecole{}
\newcommand{\ecole}[1]{
  \def\@ecole{#1}
}

\def\@specialite{}
\newcommand{\specialite}[1]{
  \def\@specialite{#1}
}

\def\@departement{}
\newcommand{\departement}[1]{
  \def\@departement{#1}
}

\def\@typeRapport{}
\newcommand{\typeRapport}[1]{
  \def\@typeRapport{#1}
}

\def\@anneeUniversitaire{}
\newcommand{\anneeUniversitaire}[1]{
  \def\@anneeUniversitaire{#1}
}

\def\@nomPromo{}
\newcommand{\nomPromo}[1]{
  \def\@nomPromo{#1}
}

\def\@encadreura{}
\newcommand{\encadreura}[1]{
  \def\@encadreura{#1}
}

\def\@encadreurb{}
\newcommand{\encadreurb}[1]{
  \def\@encadreurb{#1}
}

\def\@encadreurc{}
\newcommand{\encadreurc}[1]{
  \def\@encadreurc{#1}
}

\def\@jurya{}{}{}
\newcommand{\jurya}[3]{
  \def\@jurya{#1	& #2	& #3\\}
}
\def\@juryb{}{}{}
\newcommand{\juryb}[3]{
  \def\@juryb{#1,	& #2	& #3\\}
}
\def\@juryc{}{}{}
\newcommand{\juryc}[3]{
  \def\@juryc{#1,	& #2	& #3\\}
}
\def\@juryd{}{}{}
\newcommand{\juryd}[3]{
  \def\@juryd{#1,	& #2	& #3\\}
}
\def\@jurye{}{}{}
\newcommand{\jurye}[3]{
  \def\@jurye{#1,	& #2	& #3\\}
}
\def\@juryf{}{}{}
\newcommand{\juryf}[3]{
  \def\@juryf{#1,	& #2	& #3\\}
}
\def\@juryg{}{}{}
\newcommand{\juryg}[3]{
  \def\@juryg{#1,	& #2	& #3\\}
}
\def\@juryh{}{}{}
\newcommand{\juryh}[3]{
  \def\@juryh{#1,	& #2	& #3\\}
}
\def\@juryi{}{}{}
\newcommand{\juryi}[3]{
  \def\@juryi{#1,	& #2	& #3\\}
}

\makeatother

\makeatletter

\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package babel
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Relevé des protocoles mis en jeux dans WebRTC
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
minitoc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Il existe un certain nombre de protocoles liés à WebRTC.
 Les plus importantes sont répertoriées dans la figure suivante.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/P2/book/lyx/esp-layout/images/webrtc-protocols.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pile de protocoles WebRTC
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sur l’aile gauche de la figure précédente, s’illustrent les protocules uitlisés
 pour la signalisation tandisque dans l’aile droite, sont montrés ceux utilisés
 par RTCWeb elle même.
\end_layout

\begin_layout Standard
Un développeur Web en général n'interagira jamais directement avec les protocole
s, car les paramètres et configurations par défaut des protocoles répondront
 généralement à leurs besoins.
 Cependant, dans certains cas, en particulier lorsqu'un client WebRTC communique
 avec un client non WebRTC, une configuration et une connaissance des protocoles
 utilisés par WebRTC sont nécessaires.
 De plus, s'il est nécessaire d'ajuster l'objet RTCSessionDescription dans
 l'API WEBRTC, comme cela peut se produire s'il y a des problèmes d'interopérabi
lité SDP entre les agents utilisateurs, l'auteur de l'application devra
 avoir une meilleure compréhension du fonctionnement de la négociation.
 Dans tous les cas, une compréhension de base des protocoles utilisés par
 WebRTC est utile pour le développeur.
 Un développeur de téléphonie qui souhaite utiliser WebRTC, en revanche,
 devra avoir une compréhension détaillée des protocoles utilisés
\begin_inset CommandInset citation
LatexCommand cite
after "p. 125"
key "johnston-2013"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Protocoles de signalisation
\end_layout

\begin_layout Section
Protocoles RTCWeb
\end_layout

\begin_layout Subsection
RTP et SRTP
\end_layout

\begin_layout Standard
Le protocole le plus important utilisé par WebRTC est le Real-time Transport
 Protocol, ou RTP.
 WebRTC utilise uniquement le profil sécurisé de RTP ou Secure RTP, SRTP.
 SRTP est le protocole utilisé pour transporter et acheminer les paquets
 multimédias audio et vidéo entre les clients WebRTC.
 Les paquets multimédias contiennent les échantillons audio numérisés ou
 les images vidéo numérisées générées par un microphone ou une caméra ou
 une application, et sont rendus à l'aide d'un haut-parleur ou d'un écran.
 Une configuration réussie d'une connexion par les peers, ainsi qu'un échange
 offre/réponse complet, entraînera l'établissement d'une connexion SRTP
 entre les navigateurs ou un navigateur et un serveur, et un échange d'informati
ons sur les médias.
 SRTP fournit des informations essentielles pour transporter et restituer
 avec succès les informations du média : le codec (codeur/décodeur utilisé
 pour échantillonner et compresser l'audio ou la vidéo, la source du média
 (la source de synchronisation ou SSRC), un horodatage (pour une lecture
 correctement chronométrée ), le numéro de séquence (pour détecter les paquets
 perdus) et d'autres informations nécessaires à la lecture.
 Pour les données non audio ou vidéo, SRTP n'est pas utilisé.
 Au lieu de cela, un appel à l'API RTCDataChannel entraînera l'ouverture
 d'un canal de données entre les navigateurs permettant l'échange de données
 arbitrairement formatées
\begin_inset CommandInset citation
LatexCommand cite
after "p. 216"
key "johnston-2013"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
SDP
\end_layout

\begin_layout Standard
Les descriptions de session WebRTC sont décrites à l'aide de la Session
 Description Protocol (SDP).
 Une description de session SDP (codé comme un objet RTCSessionDescription)
 est utilisé pour décrire les caractéristiques de support de la connexion
 peer.
 Il existe une longue et compliquée liste d'informations qui doivent être
 échangées entre les deux extrémités de la session SRTP pour qu'elles puissent
 communiquer.
 Les appels d'API à RTCPeerConnection entraîneront une description de session
 SDP, un ensemble de données formatées d'une manière particulière, générées
 par le navigateur et accessibles à l'aide de JavaScript par l'application
 Web.
 Une application qui souhaite avoir un contrôle étroit sur le média peut
 apporter des modifications à la description de la session avant de la partager
 avec l'autre navigateur.
 Lorsque des modifications sont apportées à une connexion peer, cela entraînera
 des modifications de la description de session que les deux peers échangeront.
 C'est ce qu'on appelle un échange offre/réponse
\begin_inset CommandInset ref
LatexCommand eqref
reference "subsec:RTCSessionDescription"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Tout développeur souhaitant avoir un contrôle fin sur les sessions multimédias
 doit comprendre SDP
\begin_inset CommandInset citation
LatexCommand cite
after "p. 127"
key "johnston-2013"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
SRTP et SDP sont des protocoles normalisés par l'IETF et largement utilisé
 par les appareils et services de communication sur Internet, tels que les
 téléphones, les clients et les passerelles Voix sur IP (VoIP), ainsi que
 les appareils de vidéoconférence et de collaboration.
 En conséquence, la communication entre l'un de ces appareils ou clients
 et un client WebRTC est possible.
 Cependant, peu d'appareils ou de clients VoIP ou vidéo prennent aujourd'hui
 en charge l'ensemble complet des capacités et des protocoles de WebRTC.
 Ces appareils devront être mis à niveau pour prendre en charge ces nouveaux
 protocoles, ou une fonction de passerelle utilisée entre le client WebRTC
 et le client VoIP ou vidéo pour effectuer la conversion
\begin_inset CommandInset citation
LatexCommand cite
after "p. 127"
key "johnston-2013"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
STUN
\end_layout

\begin_layout Standard
STUN est un outil utilisé par d'autres protocoles, tels que Interactive
 Connectivity Establishment (ICE), le Session Initiation Protocol (SIP)
 et WebRTC permettant de détecter et de traverser les traducteurs d'adresses
 réseau situés sur le chemin entre deux points de terminaison de communication
 dans les applications de voix, vidéo, messagerie et autres communications
 interactives en temps réel.
 IIl est implémenté en tant que protocole client-serveur léger, ne nécessitant
 que des composants de requête et de réponse simples avec un serveur tiers
 situé sur le réseau commun et facilement accessible, généralement Internet.
 Le côté client est mis en œuvre dans l'application de communication de
 l'utilisateur, telle qu'un téléphone VoIP ou un client de messagerie instantané
e
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/P2/book/lyx/esp-layout/images/STUN-protocol.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Requête à un serveur STUN
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le protocole de base fonctionne essentiellement comme suit : Le client,
 opérant généralement à l'intérieur d'un réseau privé , envoie une demande
 de liaison à un serveur STUN sur l'Internet public.
 Le serveur STUN répond avec une réponse de succès qui contient l' adresse
 IP et le numéro port de du client, comme observé du point de vue du serveur.
 Le résultat est masqué par un mappage «ou exclusif»(XOR) pour éviter la
 traduction du contenu du paquet par des passerelles de couche d'application
 (ALG) qui effectuent une inspection approfondie des paquets dans le but
 d'exécuter d'autres méthodes de traversée NAT
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Les messages STUN sont envoyés dans des paquets UDP.
 Comme UDP ne fournit pas un transport fiable , la fiabilité est obtenue
 par des retransmissions contrôlées par l'application des demandes STUN.
 Les serveurs STUN n'implémentent aucun mécanisme de fiabilité pour leurs
 réponses.
 Lorsque la fiabilité est obligatoire, le protocole TCP peut être utilisé,
 mais induit une surcharge réseau supplémentaire.
 Dans les applications sensibles à la sécurité, STUN peut être transporté
 et crypté par TLS.
 Le numéro de port d'écoute standard pour un serveur STUN est 3478 pour
 UDP et TCP et 5349 pour TLS
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Lorsqu'un client a évalué son adresse externe, il peut l'utiliser comme
 candidat pour communiquer avec des pairs en partageant l'adresse NAT externe
 plutôt que l'adresse privée, qui n'est pas accessible depuis les pairs
 sur le réseau public.
 Si les deux pairs en communication sont situés dans des réseaux privés
 différents, chacun derrière un NAT, les pairs doivent se coordonner pour
 déterminer le meilleur chemin de communication entre eux.
 Certains comportements NAT peuvent restreindre la connectivité des homologues
 même lorsque la liaison publique est connue.
 Le protocole d' établissement de connectivité interactive (ICE) fournit
 un mécanisme structuré pour déterminer le chemin de communication optimal
 entre deux homologues.
 Les extensions SIP (Session Initiation Protocol ) sont définies pour permettre
 l'utilisation d'ICE lors de l'établissement d'un appel entre deux hôtes
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
TURN
\end_layout

\begin_layout Standard
Traversal Using Relays around NAT, TURN, est une extension du protocole
 STUN qui fournit un relais média pour les situations où le «hole punching
 » (trou de perforation en anglais) ICE échoue.
 Dans WebRTC, l'agent utilisateur du navigateur inclura un client TURN,
 et un serveur Web, un fournisseur de services ou une entreprise fournira
 un serveur TURN.
 Le navigateur demande une adresse IP publique et un numéro de port comme
 adresse de relais de transport au serveur TURN.
 Cette adresse est ensuite incluse en tant qu'adresse candidate dans la
 "perforation" ICE.
 Le numéro de port pour TURN peut être déterminé à l'aide d'une recherche
 DNS SRV ; le port UDP par défaut pour TURN est 3478
\begin_inset CommandInset citation
LatexCommand cite
after "p. 132"
key "johnston-2013"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
TURN peut être utilisé pour établir des adresses de transport relayées qui
 utilisent le transport UDP, TCP ou TLS.
 Cependant, la communication entre le serveur TURN et le client TURN (via
 le NAT) est toujours UDP
\begin_inset CommandInset citation
LatexCommand cite
after "p. 132"
key "johnston-2013"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/P2/book/lyx/esp-layout/images/TURN-protocol.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Serveur de relai TURN
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le processus commence lorsqu'un ordinateur client souhaite contacter un
 ordinateur peer pour une transaction de données, mais ne peut pas le faire
 car le client et son homologue se trouvent derrière leur NAT respectifs.
 Si STUN n'est pas une option car l'un des NAT est un NAT symétrique (un
 type de NAT connu pour être non compatible STUN), TURN doit être utilisé
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Tout d'abord, le client contacte un serveur TURN avec une requête "Allocate".
 La demande d'allocation demande au serveur TURN d'allouer une partie de
 ses ressources au client afin qu'il puisse contacter un homologue.
 Si l'allocation est possible, le serveur alloue une adresse au client à
 utiliser comme relais et envoie au client une réponse "Allocation réussie",
 qui contient une "adresse de transport relayée allouée" située au niveau
 du serveur TURN
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Deuxièmement, le client envoie une demande CreatePermissions au serveur
 TURN pour créer un système de vérification des autorisations pour les communica
tions homologue-serveur.
 En d'autres termes, lorsqu'un pair est finalement contacté et renvoie les
 informations au serveur TURN pour qu'elles soient relayées au client, le
 serveur TURN utilise les autorisations pour vérifier que la communication
 du serveur pair à TURN est valide
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Une fois les autorisations créées, le client a deux choix pour envoyer les
 données réelles, (1) il peut utiliser le mécanisme d'envoi, ou (2) il peut
 réserver un canal à l'aide de la requête ChannelBind.
 Le mécanisme d'envoi est plus simple, mais contient un en-tête plus grand,
 36 octets, qui peut augmenter considérablement la bande passante dans une
 conversation relayée TURN.
 En revanche, la méthode ChannelBind est plus légère : l'en-tête ne fait
 que 4 octets, mais elle nécessite la réservation d'un canal qui doit être
 périodiquement rafraîchi, entre autres considérations
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
En utilisant l'une ou l'autre méthode, Send ou channel binding, le serveur
 TURN reçoit les données du client et les relaie à l'homologue à l'aide
 de datagrammes UDP, qui contiennent comme adresse source l'"adresse de
 transport relayée allouée".
 L'homologue reçoit les données et répond, à nouveau en utilisant un datagramme
 UDP comme protocole de transport, en envoyant le datagramme UDP à l'adresse
 de relais au niveau du serveur TURN
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Le serveur TURN reçoit le datagramme UDP pair, vérifie les autorisations
 et si elles sont valides, le transmet au client
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Ce processus contourne même les NAT symétriques car le client et le pair
 peuvent au moins parler au serveur TURN, qui a alloué une adresse IP de
 relais pour la communication.
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
Alors que TURN est plus robuste que STUN en ce sens qu'il aide à traverser
 plus de types de NAT, une communication TURN relaie l'ensemble de la communicat
ion via le serveur nécessitant beaucoup plus de bande passante que le protocole
 STUN, qui ne résout généralement que l'adresse IP et les relais publics.
 l'information au client et au pair pour qu'ils l'utilisent dans la communicatio
n directe.
 Pour cette raison, le protocole ICE impose l'utilisation de STUN en premier
 recours, et l'utilisation de TURN uniquement lorsqu'il s'agit de NAT symétrique
s ou d'autres situations où STUN ne peut pas être utilisé
\begin_inset CommandInset citation
LatexCommand cite
key "wikipedia-contributors-2021B"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection

\emph on
ICE
\end_layout

\begin_layout Standard
L'établissement de connectivité interactive (ICE) est utilisé dans les problèmes
 où deux nœuds sur Internet doivent communiquer aussi directement que possible,
 mais la présence de NAT et de pare-feu rend difficile la communication
 entre les nœuds.
 Il s'agit d'une technique de mise en réseau qui utilise STUN (Session Traversal
 Utilities for NAT) et TURN (Traversal Using Relays Around NAT) pour établir
 une connexion aussi directe que possible entre deux nœuds
\begin_inset CommandInset citation
LatexCommand cite
key "geeksforgeeks-2019"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
ICE est la technique qui utilise les protocoles STUN et TURN pour établir
 une connexion.
 Au début, les points d'extrémité ne sont pas conscients de leurs propres
 topologies de réseau, qu'ils soient sous un seul NAT ou plusieurs niveaux
 de NAT et le type de NAT, ICE laisse les points d'extrémité le découvrir
 à l'aide d'un serveur STUN à travers lequel ils peuvent trouver un chemin
 établir un connexion directe.
 Si oui, la connexion est établie, sinon un serveur TURN est utilisé comme
 relais pour échanger des informations entre les points de terminaison
\begin_inset CommandInset citation
LatexCommand cite
key "geeksforgeeks-2019"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
L'algorithme du framework ICE recherche le chemin à la plus faible latence
 pour connecter les deux pairs, en essayant ces options dans l'ordre 
\begin_inset CommandInset citation
LatexCommand cite
key "mozilla-org-2021D"
literal "false"

\end_inset

: 
\end_layout

\begin_layout Itemize
Connexion UDP directe (dans ce cas, et uniquement dans ce cas, un serveur
 STUN est utilisé pour trouver l'adresse réseau d'un pair)
\end_layout

\begin_layout Itemize
Connexion TCP directe, via le port HTTP
\end_layout

\begin_layout Itemize
Connexion TCP directe, via le port HTTPS
\end_layout

\begin_layout Itemize
Connexion indirecte via un serveur relais/TURN (si une connexion directe
 échoue, par exemple, si un pair est derrière un pare-feu qui bloque la
 traversée NAT)
\end_layout

\begin_layout Standard
ICE exige que STUN soit utilisé par défaut car une communication TURN nécessite
 l'utilisation continue d'un serveur TURN, la connexion n'est pas d'égal
 à égal et davantage de ressources de serveur sont utilisées.
 ICE a été développé par l'Internet Engineering Task Force sous le nom de
 RFC 8445
\begin_inset CommandInset citation
LatexCommand cite
key "geeksforgeeks-2019"
literal "false"

\end_inset

.
\end_layout

\end_body
\end_document
