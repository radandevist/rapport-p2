#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
%           Liste des packages         %

% Faux texte, juste pour la démo
\usepackage{blindtext}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Réglage des fontes et typo    
\usepackage[utf8]{inputenc}		% LaTeX, comprend les accents !
\usepackage[T1]{fontenc}
\usepackage{float}
\usepackage{graphicx}

%\usepackage[square,sort&compress,sectionbib]{natbib}		% Doit être chargé avant babel
\usepackage[numbers]{natbib}
\usepackage{chapterbib}
	%\renewcommand{\bibsection}{\section{Références}}		% Met les références biblio dans un \section (au lieu de \section*)
		
\usepackage[frenchb]{babel}
\usepackage{lmodern}
\usepackage{ae,aecompl}						% Utilisation des fontes vectorielles modernes
\usepackage[upright]{fourier}



% Apparence globale      
\usepackage[top=2cm, bottom=2cm, left=2.5cm, right=2cm, headheight=15pt]{geometry} 
\usepackage{fancyhdr}			% Entête et pieds de page
	\pagestyle{fancy}			% Indique que le style de la page sera justement fancy
	\lfoot[\thepage]{} %gauche du pied de page
	\cfoot{} %milieu du pied de page
	\rfoot[]{\thepage} %droite du pied de page
	\fancyhead[RO, LE] {}	
\usepackage{enumerate}
\usepackage{enumitem}
\usepackage[section]{placeins}	% Place un FloatBarrier à chaque nouvelle section
\makeatletter% même chose pour les \subsection que le package ne gère pas
\renewcommand\subsection{\FloatBarrier\@startsection{subsection}{2}{\z@}
{-3.25ex\@plus -1ex \@minus -.2ex}
{1.5ex \@plus .2ex}{\normalfont\large\bfseries}}
\makeatother
\usepackage{epigraph}
\usepackage[font={small}]{caption}
\usepackage[francais]{minitoc}		% Mini table des matières, en français
	\setcounter{minitocdepth}{2}	% Mini-toc détaillées (sections/sous-sections)
\usepackage{pdflscape}				% Permet d'utiliser des pages au format paysage

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Maths                         
\usepackage{amsmath}			% Permet de taper des formules mathématiques
\usepackage{amssymb}			% Permet d'utiliser des symboles mathématiques
\usepackage{amsfonts}			% Permet d'utiliser des polices mathématiques
\usepackage{nicefrac}
\usepackage{upgreek}			% For roman (i.e. upright) lowercase Greek characters

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Profondeur titre

\renewcommand\theparagraph{\alph{paragraph})}
\setcounter{secnumdepth}{4}
\setcounter{tocdepth}{4}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Tableaux
\usepackage{multirow}
\usepackage{booktabs}
\usepackage{colortbl}
\usepackage{tabularx}
\usepackage{multirow}
\usepackage{threeparttable}
\usepackage{etoolbox}
	\appto\TPTnoteSettings{\footnotesize}
\addto\captionsfrench{\def\tablename{{\textsc{Tableau}}}}	% Renome 'table' en 'tableau'

            
            

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Graphiques                    
\usepackage{graphicx}			% Permet l'inclusion d'images
\usepackage{subcaption}
\usepackage{pdfpages}
\usepackage{rotating}
\usepackage{pgfplots}
	\usepgfplotslibrary{groupplots}
\usepackage{tikz}
	\usetikzlibrary{backgrounds,automata}
	\pgfplotsset{width=7cm,compat=1.3}
	\tikzset{every picture/.style={execute at begin picture={
   		\shorthandoff{:;!?};}
	}}
	\pgfplotsset{every linear axis/.append style={
		/pgf/number format/.cd,
		use comma,
		1000 sep={\,},
	}}
\usepackage{eso-pic}
\usepackage{import}
\usepackage{cclicenses}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Biblio                        
\makeatletter
\patchcmd{\BR@backref}{\newblock}{\newblock(page~}{}{}	% Pour les back-references, affiche 'page' au lieu de 'p.'
\patchcmd{\BR@backref}{\par}{)\par}{}{}
\makeatother
	
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Navigation dans le document   
\usepackage[pdftex,pdfborder={0 0 0},
			colorlinks=true,
			linkcolor=black,
			citecolor=black,
			pagebackref=false,
			]{hyperref} %Créera automatiquement les liens internes au PDF


% Mise en forme du texte        
\usepackage{xspace}
\usepackage[load-configurations = abbreviations]{siunitx}
	\DeclareSIUnit{\MPa}{\mega\pascal}
	\DeclareSIUnit{\micron}{\micro\meter}
	\DeclareSIUnit{\tr}{tr}
	\DeclareSIPostPower\totheM{m}
	\sisetup{
	locale = FR,
	  inter-unit-separator=$\cdot$,
	  range-phrase=~\`{a}~,     	% Utilise le tiret court pour dire "de... à"
	  range-units=single,  			% Cache l'unité sur la première borne
	  }
\usepackage{chemist}
\usepackage[version=3]{mhchem}
\usepackage{textcomp}
\usepackage{numprint}
\usepackage{array}
% \usepackage[acronym,xindy,toc]{glossaries}
% 	\newglossary[nlg]{notation}{not}{ntn}{Notation} 	% Création d'un type de glossaire 'notation'
% 	\makeglossaries
% 	\loadglsentries{Glossaire}	% Utilisation d'un fichier externe pour la définition des entrées (Glossaire.tex)
% \usepackage{hyphenat}


% Compilation

\usepackage{silence}
%
%% Virer les erreur dues à minitoc
\WarningFilter{minitoc(hints)}{W0023}
\WarningFilter{minitoc(hints)}{W0024}
\WarningFilter{minitoc(hints)}{W0028}
\WarningFilter{minitoc(hints)}{W0030}

 

%           Page de garde              %
\makeatletter
\def\@ecole{}
\newcommand{\ecole}[1]{
  \def\@ecole{#1}
}

\def\@specialite{}
\newcommand{\specialite}[1]{
  \def\@specialite{#1}
}

\def\@departement{}
\newcommand{\departement}[1]{
  \def\@departement{#1}
}

\def\@typeRapport{}
\newcommand{\typeRapport}[1]{
  \def\@typeRapport{#1}
}

\def\@anneeUniversitaire{}
\newcommand{\anneeUniversitaire}[1]{
  \def\@anneeUniversitaire{#1}
}

\def\@nomPromo{}
\newcommand{\nomPromo}[1]{
  \def\@nomPromo{#1}
}

\def\@encadreura{}
\newcommand{\encadreura}[1]{
  \def\@encadreura{#1}
}

\def\@encadreurb{}
\newcommand{\encadreurb}[1]{
  \def\@encadreurb{#1}
}

\def\@encadreurc{}
\newcommand{\encadreurc}[1]{
  \def\@encadreurc{#1}
}

\def\@jurya{}{}{}
\newcommand{\jurya}[3]{
  \def\@jurya{#1	& #2	& #3\\}
}
\def\@juryb{}{}{}
\newcommand{\juryb}[3]{
  \def\@juryb{#1,	& #2	& #3\\}
}
\def\@juryc{}{}{}
\newcommand{\juryc}[3]{
  \def\@juryc{#1,	& #2	& #3\\}
}
\def\@juryd{}{}{}
\newcommand{\juryd}[3]{
  \def\@juryd{#1,	& #2	& #3\\}
}
\def\@jurye{}{}{}
\newcommand{\jurye}[3]{
  \def\@jurye{#1,	& #2	& #3\\}
}
\def\@juryf{}{}{}
\newcommand{\juryf}[3]{
  \def\@juryf{#1,	& #2	& #3\\}
}
\def\@juryg{}{}{}
\newcommand{\juryg}[3]{
  \def\@juryg{#1,	& #2	& #3\\}
}
\def\@juryh{}{}{}
\newcommand{\juryh}[3]{
  \def\@juryh{#1,	& #2	& #3\\}
}
\def\@juryi{}{}{}
\newcommand{\juryi}[3]{
  \def\@juryi{#1,	& #2	& #3\\}
}

\makeatother

\makeatletter

\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package babel
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Quelques mots sur l'application réalisée
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
minitoc
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Choix des outils et technologies
\end_layout

\begin_layout Subsection
Typescript
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
En termes simples,  TypeScript est un langage de programmation open source
 développé par Microsoft qui compile en JavaScript.
 En fait, TypeScript est un sur-ensemble  de JavaScript, ce qui signifie
 que tout code JavaScript valide est également un code TypeScript valide.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
L'augmentation clé que TypeScript apporte à JavaScript est un système de
 types  (d'où le nom "TypeScript").
 Traditionnellement, JavaScript est  dynamiquement  typé (un peu comme Python).
 Cela signifie qu'une seule variable peut contenir du texte, un nombre ou
 même une entité de base de données entière, selon l'occasion.
  TypeScript définit strictement ce qu'une variable donnée peut contenir.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Typescript améliore l’experience de development et réduit les chances d’occurenc
e de bugs du programme lors de son éxecution et déployement.
\end_layout

\begin_layout Subsection
React.js
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Il s’agît d’une libraire javascript servant à confectionner des interfaces
 utilisateurs.
 Les principales raisons de son choix dans ce projet sont énumérées ci-après:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{-0.5 cm}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\paragraph_spacing other 1.5
\noindent
React adopte un approche basée sur des composants: Ce sont des blocs de
 construction de base qui représentent des éléments de la vue de l’application.
 Celà favorise la réutilisabilité des composants d’une part et la maintenabilité
 de l’application d’autre part.
\end_layout

\begin_layout Itemize
\paragraph_spacing other 1.5
\noindent
La syntaxe JSX
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "A"
symbol "JSX"
description "JavaScript XML"
literal "false"

\end_inset

 facilite le processus global d'écriture des composants: JSX est une extension
 de syntaxe facultative à JavaScript qui accepte les guillemets HTML d’où
 la facilité évoquée.
\end_layout

\begin_layout Itemize
\paragraph_spacing other 1.5
\noindent
Le système de rendu reliées aux variables «state» qui permet facilement
 de mettre à jour une interface utilisateur sans pour autant rafraîchir
 une page.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{-0.8 cm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Node.js
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Pour les fins de la signalistion nous avons besoin de développer un serveur:
 c'est ici qu'entre en jeu Node.js.
 Il s'agît d'un runtime (environnement d'éxecution) pour le langage Javascript.
 Par souci d'uniformité du langage utilisé et du coût d'apprentissage, nous
 avons opté pour node.js car du côté du client Javascript est utilisé.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
D'autre part, Node.js s'avère être le choix optimal pour le besoin de ce
 projet: en raison de sa boucle d'événements à thread unique axée sur les
 événements et de son modèle d'E/S (Entrée-Sortie) asynchrone non bloquant,
 Node.js fonctionne mieux sur les applications d'E/S intenses nécessitant
 vitesse et évolutivité avec de nombreuses connexions simultanées, comme
 le streaming vidéo et audio, applications de temps réel, chats en direct,
 applications de jeux, outils de collaboration ou logiciels de bourse
\begin_inset CommandInset citation
LatexCommand cite
key "freecodecamporg-2019"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Socket.IO
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Socket.IO permet une communication bidirectionnelle entre le client et le
 serveur: nous nous en sommes servi pour l'échange de données lors de la
 signalisation.
 Les communications bidirectionnelles sont activées lorsqu'un client a Socket.IO
 dans le navigateur et qu'un serveur a également intégré le package Socket.IO.
 Bien que les données puissent être envoyées sous plusieurs formes, JSON
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "A"
symbol "JSON"
description "JavaScript Object Notation"
literal "false"

\end_inset

 est la plus simple
\begin_inset CommandInset citation
LatexCommand cite
key "lewington-2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Socket.IO fait penser aux WebSockets.
 Les WebSockets sont également une implémentation de navigateur permettant
 une communication bidirectionnelle, cependant, Socket.IO ne l'utilise pas
 en standard.
 Tout d'abord, Socket.IO crée une connexion à interrogation longue en utilisant
 l'interrogation xhr.
 Ensuite, une fois cela établi, il passe à la meilleure méthode de connexion
 disponible.
 Dans la plupart des cas, cela se traduira par une connexion WebSocket
\begin_inset CommandInset citation
LatexCommand cite
key "lewington-2021"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Structure du projet
\end_layout

\begin_layout Standard
Vu l'éventail de technologies impliquées dans la section précédente, ce
 projet s'apparente ni plus ni moins à projet MERN
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "A"
symbol "MERN"
description "MongoDB Express React Node.js"
literal "false"

\end_inset

 stack.
 Commposé par deux dossiers-projets différents, l'un contient le code qui
 sera éxécuté dans le navigateur et l'autre celui du serveur de signalisation.
 Ces deux dossiers sont totalements indépendants l'un de l'autre.
\end_layout

\begin_layout Section
Apercu de l'application
\end_layout

\begin_layout Subsection
Diagramme du flux d'utilisation
\end_layout

\begin_layout Standard
Le flux d'utilisateurs est le chemin emprunté par un utilisateur prototype
 sur un site Web ou une application pour effectuer une tâche.
 Le flux d'utilisateurs les emmène de leur point d'entrée à travers un ensemble
 d'étapes vers un résultat réussi et une action finale.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/projet2-espa/Book/rapport-p2/images/user-flow-diagram.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramme du flux d'utilisation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Wireframing
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Le wireframing est un moyen de concevoir un service de site Web au niveau
 structurel.
 Un wireframe est couramment utilisé pour mettre en page le contenu et les
 fonctionnalités d'une page en tenant compte des besoins et des parcours
 des utilisateurs.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Une personne arrivant sur la page initiale de notre application devra d'abord
 ernregistrer un nom d'utilisateur (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Formulaire-de-submission"
plural "false"
caps "false"
noprefix "false"

\end_inset

) si elle souhaite pouvoir communiquer avec d'autre utilisateur.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/projet2-espa/Book/rapport-p2/images/set-username-form.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Formulaire de submission d'un nom d'utilisateur
\begin_inset CommandInset label
LatexCommand label
name "fig:Formulaire-de-submission"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Aussitôt la tâche précédente effectuée, un autre formulaire apparaît (figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Formulaire-nom-d'utilisateur"
plural "false"
caps "false"
noprefix "false"

\end_inset

): pour entrer le nom d'utilisateur de notre futur locuteur.
 Ici, nous avons le choix entre remplir ce formulaire et perpétrer un appel
 ou attendre que quelqu'un nous appele.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/projet2-espa/Book/rapport-p2/images/set-friendname-form.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Formulaire nom d'utilisateur du futur interlocuteur
\begin_inset CommandInset label
LatexCommand label
name "fig:Formulaire-nom-d'utilisateur"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Du moment qu'une offre d'appel est en cours, les deux parties (l'appelant
 et l'appelé) verront un dialogue d'alerte (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Boîtes-de-dialogues"
plural "false"
caps "false"
noprefix "false"

\end_inset

) leur étant spécifique:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{-0.5 cm}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\paragraph_spacing other 1.5
\noindent
La personne qui appelle à le choix d'annuler son appel
\end_layout

\begin_layout Itemize
\paragraph_spacing other 1.5
\noindent
Celle qui reçoit l'appel peut soit l'acceppter soit le refuser.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{-0.8 cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Enfin, une fois qu'un appel a été accepté, les utilisateurs sont dirigés
 vers la page de discussion (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-page-de-discussion"
plural "false"
caps "false"
noprefix "false"

\end_inset

) d'où ils pouront directement se voir et s'entendre.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/projet2-espa/Book/rapport-p2/images/call-alert-dialogs.png
	scale 37.5

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Boîtes de dialogues d'appel sortant et entrant
\begin_inset CommandInset label
LatexCommand label
name "fig:Boîtes-de-dialogues"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/radan/Projects/projet2-espa/Book/rapport-p2/images/chat-room.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
La page de discussion
\begin_inset CommandInset label
LatexCommand label
name "fig:La-page-de-discussion"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Difficultés rencontrées
\end_layout

\begin_layout Subsection
Écouteurs d'évenéments sous React
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Les composants react ont un cycle de vie et chaque fois qu'une «state» (variable
 d'état) d'un composant change de valeur, alors le composant est démantelé
 pour être aussitôt rerendu avec la nouvelle valeur en question.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
D'autre part, Socket.IO fonctionne en se basant sur les évenéments.
 C'est à dire que dans nos composants React nous avons besoin d'écouter
 les messages envoyés par le serveur et mettre en place les réactions correspond
antes à chaque type de message reçu.
 Ce qui nous amène a écrire le code suivant dans nos composants React:
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "style=ES6"
inline false
status open

\begin_layout Plain Layout

// écouter un message émit par le serveur Socket.IO dans un composant React
\end_layout

\begin_layout Plain Layout

const handler = () => {/* la réaction en cas d'évenément 'message' */};
\end_layout

\begin_layout Plain Layout

socket.on('message', handler);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Écoute d'évenément Socket.IO
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Le problème qui se pose avec le code précedent: à chaque nouveau cycle de
 vie de notre composant, un nouvel écouteur d'évenément est enregistrer
 en même temps.
 Et au moment où l'évenément 
\begin_inset listings
lstparams "style=ES6"
inline true
status open

\begin_layout Plain Layout

'message'
\end_layout

\end_inset

 aura lieu, la réaction mise en place pour gérer cet évenément sera éxécuté
 par le nombre de fois que notre composant a été rendu.
 Ce qui pose un sérieux soucis de performance pour notre application.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
La solution consiste à enregistrer les écouteurs d'évenenments et aussi
 les désactiver à l'intérieur de la méthode de cycle de vie React 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

React.useEffect()
\end_layout

\end_inset

 comme montré dans le listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Écoute-d'évenement-Socket.IO"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Ainsi la performance de l'application est restorée.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "style=ES6"
inline false
status open

\begin_layout Plain Layout

// écouter un message émit par le serveur Socket.IO dans un composant React
\end_layout

\begin_layout Plain Layout

const handler = () => {/* la réaction en cas d'évenément 'message' */};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

React.useEffect(() => {
\end_layout

\begin_layout Plain Layout

  // écouter les évenéments messages quand le composant est monté
\end_layout

\begin_layout Plain Layout

  socket.on('message', handler); 
\end_layout

\begin_layout Plain Layout

  return () => {
\end_layout

\begin_layout Plain Layout

    // désactiver l'écouteur quand le composant est démonté
\end_layout

\begin_layout Plain Layout

    socket.off('message', handler);
\end_layout

\begin_layout Plain Layout

  };
\end_layout

\begin_layout Plain Layout

}, []);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Écoute d'évenément Socket.IO correcte sous React
\begin_inset CommandInset label
LatexCommand label
name "alg:Écoute-d'évenement-Socket.IO"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Politique CORS de Socket.IO
\end_layout

\begin_layout Standard
Cross-origin Ressouce sharing (CORS
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "A"
symbol "CORS"
description "Cross-Origin Ressource Sharing"
literal "false"

\end_inset

) est un mécanisme qui permet de demander des ressources restreintes sur
 une page Web à un autre domaine en dehors du domaine à partir duquel la
 première ressource a été servie.
\end_layout

\begin_layout Standard
LA librairie Socket.IO requiers son activation explicitement dans sa configuratio
n initiale (listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Configuration-CORS-Socket.IO"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "style=ES6"
inline false
status open

\begin_layout Plain Layout

// côté serveur
\end_layout

\begin_layout Plain Layout

const io = require("socket.io")(httpServer, {
\end_layout

\begin_layout Plain Layout

  cors: {
\end_layout

\begin_layout Plain Layout

    origin: "https://example.com",
\end_layout

\begin_layout Plain Layout

    methods: ["GET", "POST"],
\end_layout

\begin_layout Plain Layout

    allowedHeaders: ["my-custom-header"],
\end_layout

\begin_layout Plain Layout

   credentials: true
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

});
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// client-side
\end_layout

\begin_layout Plain Layout

const io = require("socket.io-client");
\end_layout

\begin_layout Plain Layout

const socket = io("https://api.example.com", {
\end_layout

\begin_layout Plain Layout

  withCredentials: true,
\end_layout

\begin_layout Plain Layout

  extraHeaders: {
\end_layout

\begin_layout Plain Layout

    "my-custom-header": "abcd"
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuration CORS Socket.IO
\begin_inset CommandInset label
LatexCommand label
name "alg:Configuration-CORS-Socket.IO"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La manière de contourner cette situation consiste à servir les fichiers
 résultants de la construction ou du «build» du projet client en tant que
 fichiers statiques du projet serveur une fois en prodution.
\end_layout

\begin_layout Subsection
Où initialiser RTCPeerConnection?
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Une erreur avec laquelle nous nous sommes confrontés est la manière ou plutôt
 le lieu où l'objet, instance de RTCPeerConnection a été initialisée.
 RTCPeerConection était initialisée dans la page
\begin_inset Foot
status open

\begin_layout Plain Layout
Rappelons nous que React est basé sur des composants ce qui implique chaque
 élément à tout les niveaux sont des composants, y compris lesdites pages
 ici.
\end_layout

\end_inset

 contenant le formulaire d'appel (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Formulaire-nom-d'utilisateur"
plural "false"
caps "false"
noprefix "false"

\end_inset

) avant d'être redirigé vers la page de discussion (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-page-de-discussion"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /run/media/radan/RADAN/Projects/projet2-espa/Book/rapport-p2/images/init-pc-problem.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RTCpeerConnection initialisée dans la page du formulaire d'appel
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Cette approche a l'effet suivant: la variable contenant l'objet RTCPeeerconnecti
on n'est pas transportée vers la page de discussion.
 Puisque cette variable n'est pas définie dans la page de discussion aucune
 connexion ou communication WebRTC n'est possible or que c'est dans cette
 page que la connexion RTCPeerConnction est la plus nécéssaire.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /run/media/radan/RADAN/Projects/projet2-espa/Book/rapport-p2/images/react-context-solution.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Usage de React context
\begin_inset CommandInset label
LatexCommand label
name "fig:Usage-de-React"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Une tentative de résolution de ce problème a consisté a utiliser le mécanisme
 de contexte (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Usage-de-React"
plural "false"
caps "false"
noprefix "false"

\end_inset

) apporté par React pour rendre une variable accessible depuis n'importe
 quel autre composant descendant dans l'arborescence de notre application.
 Malheureusement celà n'a pas eu l'effet escompté.
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
En fait, au lieu de l'avoir initialiser ailleurs, RTCPeerconnection aurait
 du voir le jour dans la page de discussion (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-manière-correcte"
plural "false"
caps "false"
noprefix "false"

\end_inset

), là ou elle est plus qu'indispensable.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /run/media/radan/RADAN/Projects/projet2-espa/Book/rapport-p2/images/init-pc-solution.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
La manière correcte d'inintialiser RTCpeerConnection
\begin_inset CommandInset label
LatexCommand label
name "fig:La-manière-correcte"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Améliorations à apporter
\end_layout

\begin_layout Subsection
Messagerie et transfert de données
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Faire en sorte que les participants, en plus de communiquer audio-visuellement,
 puissent s'envoyer des messages sous forme de texte et des donnée sous
 forme de fichiers entre eux.
 Le chemin à prendre pour celà consiste à exploiter l'API WebRTC RTCDatachannel
 discutée dans la section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:RTCDatachannel"
plural "false"
caps "false"
noprefix "false"

\end_inset

 car elle pourvoit à cette fin (le transport de données).
\end_layout

\begin_layout Subsection
Discussion groupée
\end_layout

\begin_layout Standard
\paragraph_spacing other 1.5
Parmi les possibilités d'extension de l'applpication, l'implémentation de
 groupe de discussion.
 Pour l'instant, l'application permet uniquement deux pairs de communiquer
 entre eux.
 L'objectif est d'augmenter ce nombre et permettre à plus de deux pairs
 de se connecter simultanément et ce de manière dynamique.
\end_layout

\end_body
\end_document
